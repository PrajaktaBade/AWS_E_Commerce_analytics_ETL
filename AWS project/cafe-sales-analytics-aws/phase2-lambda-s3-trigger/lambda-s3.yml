AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function triggered by S3 upload

Parameters:
  S3BucketName:
    Type: String
    Description: Existing S3 bucket name from Phase 1

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-s3-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: s3-trigger-function
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Timeout: 10
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              print("Event:", json.dumps(event))
              return {'statusCode': 200, 'body': json.dumps('Hello from Lambda!')}

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${S3BucketName}

Outputs:
  LambdaFunctionName:
    Value: !Ref LambdaFunction
    Description: Lambda function name
